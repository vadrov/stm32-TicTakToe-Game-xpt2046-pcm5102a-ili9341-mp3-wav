/*
 *  Author: VadRov
 *  Copyright (C) 2019, VadRov, all right reserved.
 *
 *  Драйвер для работы с тачскрином на базе контроллера XPT2046 (HR2046 и т.п.)
 *
 *  Допускается свободное распространение без целей коммерческого использования.
 *  При коммерческом использовании необходимо согласование с автором.
 *  Распространятся по типу "как есть", то есть использование осуществляете на свой страх и риск.
 *  Автор не предоставляет никаких гарантий.
 *
 *  https://www.youtube.com/@VadRov
 *  https://dzen.ru/vadrov
 *  https://vk.com/vadrov
 *  https://t.me/vadrov_channel
 *
 */

#ifndef INC_XPT2046_H_
#define INC_XPT2046_H_

#include "main.h"
#include "display.h"

/* команды контроллера XPT2046
 * BIT7(MSB)  BIT6 BIT5  BIT4  BIT3    BIT2    BIT1  BIT0(LSB)
 *    S        A2   A1    A0   MODE   SER/DFR   PD1    PD0
 * S - Стартовый бит. Управляющий байт начинается с первого установленного старшего бита.
 * A2 - A0 - Биты выбора канала мультиплексора.
 * MODE - 12-битное/8-битное преобразование. Этот бит управляет количеством битов для следующего
 * преобразования: 12 бит - 0 или 8 бит - 1.
 * SER/DFR - Бит выбора типа входа АЦП: 1 - нессиметричный, 0 - дифференциальный.
 * PD1 - PD0 биты выбора режима энергопотребления и подключения опорного напряжения.
 */
//Команды контроллера для 16-битного spi
#define XPT2046_NOP 	0x0000
#define XPT2046_Y 		0x0090
#define XPT2046_X 		0x00D0

//данные подключения тачскрина
typedef struct {
	SPI_TypeDef *spi;		//указатель на spi
	uint8_t speed;			//скорость spi (от 0 - clk/2 до 7 - clk/256)
	GPIO_TypeDef *cs_port;	//указатель на порт с выводом T_CS
	uint16_t cs_pin;		//номер вывода порта c T_CS (настроен как выход)
	GPIO_TypeDef *irq_port;	//указатель на порт с выводом T_IRQ
	uint16_t irq_pin;		//номер вывода порта с T_IRQ (настроен как вход с разрешением прерывания EXTI)
	uint16_t exti_irq;		//канал внешнего прерывания EXTI
} XPT2046_ConnectionData;

//данные с координатами точки касания
typedef struct {
	int x, y;
} tPoint;

//коэффициенты для преобразования координат тачскрина в дисплейные координаты
typedef struct {
	int64_t	Dx1, Dx2, Dx3, Dy1, Dy2, Dy3, D;
} tCoef;

//обработчик тачскрина
typedef struct {
	XPT2046_ConnectionData cnt_data;//Данные подключения
	tPoint point;					//Координаты последнего считанного касания (в координатах тачскрина)
	uint32_t last_click_time;   	//Длительность последнего касания, выраженная в количестве прерываний таймера/,
									//роизошедших от момента последнего касания тачскрина до момента отпускания тачскрина
	uint32_t click_time_counter;	//Счетчик длительности текущего касания (также выражается в количестве прерываний таймера)
	uint8_t fl_interrupt;			//Флаг разрешения обновления координат тачскрина в прерывании
	uint8_t click;					//Флаг, показывающий, есть или нет в текущий момент касание тачскрина
	tPoint delta_p;					//Разница координат, выраженная в пикселях дисплея, показывающая изменение координат
									//от последнего касания до отпускания тачскрина.
									//Зная время касания и изменение координат можно определить тип касания тачскрина.
	tCoef coef;						//коэффициенты преобразования координат тачскина в экранные координаты
	uint8_t fl_first_point;			//флаг, показывающий, считана или нет первая координата для текущего касания
	tPoint first_click_point;		//первая координата для текущего касания, считанная с тачскрина
	uint8_t fl_timer;				//флаг разрешающий или запрещающий запускать обработчик таймера
	uint8_t fl_wait_exti;			//флаг ожидания разрешения прерывания exti
	uint32_t timer_update_period;	//период счетчика таймера
	uint32_t timer_counter;			//счетчик таймера
} XPT2046_Handler;

extern XPT2046_Handler *touch;

//обработчик прерывания EXTI
//(добавить в соответствующий обработчик EXTIx_IRQHandler - см. файл stm32f4xx_it.c)
void XPT2046_EXTICallback(XPT2046_Handler *t);
//обработчик прерывания системного таймера
//(добавить в обработчик SysTick_Handler - см. файл stm32f4xx_it.c)
void XPT2046_TIMCallback(XPT2046_Handler *t);
//инициализация обработчика тачскрина
void XPT2046_InitTouch(XPT2046_Handler *t, uint32_t timer_update_period, XPT2046_ConnectionData *cnt_data);
//опрос тачскрина
uint8_t XPT2046_GetTouch(XPT2046_Handler *t);
//калибровка тачскрина по 5 точкам
uint8_t XPT2046_CalibrateTouch(XPT2046_Handler *t, LCD_Handler *lcd);
//преобразование координат тачскрина в дисплейные координаты
void XPT2046_ConvertPoint(tPoint *p_display, tPoint *p_touch, tCoef *coef);

#endif /* INC_XPT2046_H_ */
